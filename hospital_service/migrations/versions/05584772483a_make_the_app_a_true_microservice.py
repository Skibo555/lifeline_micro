"""make the app a true microservice

Revision ID: 05584772483a
Revises: 5d5635e310cf
Create Date: 2025-02-26 01:09:39.863757

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '05584772483a'
down_revision: Union[str, None] = '5d5635e310cf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('hospitals', sa.Column('created_by', sa.UUID(), nullable=False))
    op.alter_column('hospitals', 'type',
               existing_type=postgresql.ENUM('PRIVATE', 'PUBLIC', name='hospitaltype'),
               type_=sa.String(length=15),
               existing_nullable=True)
    op.alter_column('hospitals', 'status',
               existing_type=postgresql.ENUM('SUSPENDED', 'ACTIVE', name='hospitalstatus'),
               type_=sa.String(length=15),
               existing_nullable=True)
    op.create_unique_constraint(None, 'hospitals', ['hospital_id'])
    op.drop_column('hospitals', 'is_suspended')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('hospitals', sa.Column('is_suspended', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'hospitals', type_='unique')
    op.alter_column('hospitals', 'status',
               existing_type=sa.String(length=15),
               type_=postgresql.ENUM('SUSPENDED', 'ACTIVE', name='hospitalstatus'),
               existing_nullable=True)
    op.alter_column('hospitals', 'type',
               existing_type=sa.String(length=15),
               type_=postgresql.ENUM('PRIVATE', 'PUBLIC', name='hospitaltype'),
               existing_nullable=True)
    op.drop_column('hospitals', 'created_by')
    # ### end Alembic commands ###
