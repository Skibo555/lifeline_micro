"""add long and lat for location filtering

Revision ID: 02f7124dbbe6
Revises: 1ea3792140d5
Create Date: 2025-03-15 04:54:07.408881

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '02f7124dbbe6'
down_revision: Union[str, None] = '1ea3792140d5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('lat', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('long', sa.Integer(), nullable=True))
    op.alter_column('users', 'hospital_created',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.create_unique_constraint(None, 'users', ['user_id'])
    op.create_unique_constraint(None, 'users', ['hospital_created'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'hospital_created',
               existing_type=sa.String(length=50),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.drop_column('users', 'long')
    op.drop_column('users', 'lat')
    # ### end Alembic commands ###
